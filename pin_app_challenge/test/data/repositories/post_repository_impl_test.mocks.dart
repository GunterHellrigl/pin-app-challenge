// Mocks generated by Mockito 5.4.4 from annotations
// in pin_app_challenge/test/data/repositories/post_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:either_dart/either.dart' as _i6;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:pin_app_challenge/data/datasources/post_http_datasource.dart'
    as _i4;
import 'package:pin_app_challenge/data/datasources/post_swift_datasource.dart'
    as _i9;
import 'package:pin_app_challenge/data/responses/get_posts_response.dart'
    as _i7;
import 'package:pin_app_challenge_post_sdk/pin_app_challenge_post_sdk.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePinAppChallengePostSdk_1 extends _i1.SmartFake
    implements _i3.PinAppChallengePostSdk {
  _FakePinAppChallengePostSdk_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PostHttpDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostHttpDatasource extends _i1.Mock
    implements _i4.PostHttpDatasource {
  MockPostHttpDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  _i5.Future<_i6.Either<Exception, List<_i7.PostResponse>>> getPosts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [],
        ),
        returnValue:
            _i5.Future<_i6.Either<Exception, List<_i7.PostResponse>>>.value(
                _i8.dummyValue<_i6.Either<Exception, List<_i7.PostResponse>>>(
          this,
          Invocation.method(
            #getPosts,
            [],
          ),
        )),
      ) as _i5.Future<_i6.Either<Exception, List<_i7.PostResponse>>>);
}

/// A class which mocks [PostSwiftDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostSwiftDatasource extends _i1.Mock
    implements _i9.PostSwiftDatasource {
  MockPostSwiftDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.PinAppChallengePostSdk get sdk => (super.noSuchMethod(
        Invocation.getter(#sdk),
        returnValue: _FakePinAppChallengePostSdk_1(
          this,
          Invocation.getter(#sdk),
        ),
      ) as _i3.PinAppChallengePostSdk);

  @override
  _i5.Future<_i6.Either<Exception, List<_i3.Comment>>> getComments(
          {required int? postId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getComments,
          [],
          {#postId: postId},
        ),
        returnValue: _i5.Future<_i6.Either<Exception, List<_i3.Comment>>>.value(
            _i8.dummyValue<_i6.Either<Exception, List<_i3.Comment>>>(
          this,
          Invocation.method(
            #getComments,
            [],
            {#postId: postId},
          ),
        )),
      ) as _i5.Future<_i6.Either<Exception, List<_i3.Comment>>>);
}
